name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
      - '**'
  pull_request:
    branches:
      - main
  delete:
    branches:
      - '**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Deploy main branch
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .
          publish_branch: gh-pages
          keep_files: true

      - name: Deploy other branches
        if: github.ref != 'refs/heads/main' && github.event_name != 'delete'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .
          destination_dir: ${{ github.ref_name }}
          publish_branch: gh-pages
          keep_files: true

      - name: Comment PR
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Deployment preview: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${{ github.head_ref }}'
            })

  cleanup:
    runs-on: ubuntu-latest
    if: github.event_name == 'delete' || (github.event_name == 'pull_request' && github.event.action == 'closed')
    steps:
      - uses: actions/checkout@v2
        with:
          ref: gh-pages

      - name: Configure Git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: Remove branch folder
        run: |
          BRANCH_NAME="${{ github.event.ref }}"
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            BRANCH_NAME="${{ github.head_ref }}"
          fi
          if [ -d "$BRANCH_NAME" ]; then
            git rm -rf "$BRANCH_NAME"
            git commit -m "Remove deployment for branch $BRANCH_NAME"
            git push
          else
            echo "Branch folder $BRANCH_NAME does not exist, skipping cleanup"
          fi
